apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.parag.autolabs"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        def Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField 'String', 'API_HOST', apiHost
        buildConfigField 'String', 'WEATHER_APP_ID', properties.getProperty("weatherAppId", "")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
            test.java.srcDirs += 'src/test/kotlin'
            androidTest.java.srcDirs += 'src/androidTest/kotlin'
        }
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Android Support
    implementation "com.android.support:support-v4:$androidSupportVersion"
    implementation "com.android.support:support-v13:$androidSupportVersion"
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support:design:$androidSupportVersion"
    implementation "com.android.support:cardview-v7:$androidSupportVersion"
    implementation "com.android.support:recyclerview-v7:$androidSupportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    //RxJava
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    //Retrofit and Okhttp
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    //Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    //Testing
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$androidTestVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    testImplementation("com.nhaarman:mockito-kotlin:$mockitoKotlinVersion") {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    //Image and Animation
    implementation "com.makeramen:roundedimageview:$roundImageViewVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.github.ybq:Android-SpinKit:$spinKitVersion"
    implementation "com.android.support:support-compat:$androidSupportVersion"
    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'
}
